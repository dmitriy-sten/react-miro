/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const BoardsIndexLazyImport = createFileRoute('/boards/')()
const BoardsIdLazyImport = createFileRoute('/boards/$id')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const BoardsIndexLazyRoute = BoardsIndexLazyImport.update({
  id: '/boards/',
  path: '/boards/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/boards.index.lazy').then((d) => d.Route))

const BoardsIdLazyRoute = BoardsIdLazyImport.update({
  id: '/boards/$id',
  path: '/boards/$id',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/boards.$id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/boards/$id': {
      id: '/boards/$id'
      path: '/boards/$id'
      fullPath: '/boards/$id'
      preLoaderRoute: typeof BoardsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/boards/': {
      id: '/boards/'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof BoardsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/boards/$id': typeof BoardsIdLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/boards/$id': typeof BoardsIdLazyRoute
  '/boards': typeof BoardsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginLazyRoute
  '/register': typeof RegisterLazyRoute
  '/boards/$id': typeof BoardsIdLazyRoute
  '/boards/': typeof BoardsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/register' | '/boards/$id' | '/boards'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/register' | '/boards/$id' | '/boards'
  id: '__root__' | '/login' | '/register' | '/boards/$id' | '/boards/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginLazyRoute: typeof LoginLazyRoute
  RegisterLazyRoute: typeof RegisterLazyRoute
  BoardsIdLazyRoute: typeof BoardsIdLazyRoute
  BoardsIndexLazyRoute: typeof BoardsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  LoginLazyRoute: LoginLazyRoute,
  RegisterLazyRoute: RegisterLazyRoute,
  BoardsIdLazyRoute: BoardsIdLazyRoute,
  BoardsIndexLazyRoute: BoardsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/register",
        "/boards/$id",
        "/boards/"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    },
    "/boards/$id": {
      "filePath": "boards.$id.lazy.tsx"
    },
    "/boards/": {
      "filePath": "boards.index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
